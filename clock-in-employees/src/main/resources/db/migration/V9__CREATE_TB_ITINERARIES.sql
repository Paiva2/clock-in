CREATE TABLE IF NOT EXISTS TB_ITINERARIES (
    ITI_ID BIGSERIAL PRIMARY KEY,
    ITI_DAY_WORK_HOURS VARCHAR(10) NOT NULL,
    ITI_IN_HOUR VARCHAR(8) NOT NULL,
    ITI_INTERVAL_IN_HOUR VARCHAR(8) NOT NULL,
    ITI_INTERVAL_OUT_HOUR VARCHAR(8) NOT NULL,
    ITI_OUT_HOUR VARCHAR(8) NOT NULL,
    ITI_CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ITI_UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    ITI_EMPLOYEE_ID BIGSERIAL REFERENCES tb_employees(EM_ID) NOT NULL
);

CREATE  FUNCTION update_updated_at_tb_itineraries()
    RETURNS TRIGGER AS $$
BEGIN
    NEW.ITI_UPDATED_AT = now();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_itineraries_task_updated_on
    BEFORE UPDATE
    ON
        "clock-in-db".public.TB_ITINERARIES
    FOR EACH ROW
EXECUTE PROCEDURE update_updated_at_tb_itineraries();